# This file is a template, and might need editing before it works on your project.
variables:
  RELEASE: ""
  BRANCH: "edge-php8"
  DOCKERHOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2

docker-buildx-stable:
  # Official docker image.
  image: registry.gitlab.com/dedyms/docker-with-buildx:0.5.1
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$CI_DOCKERHUB_REGISTRY_USER" -p "$CI_DOCKERHUB_REGISTRY_PASSWORD" $CI_DOCKERHUB_REGISTRY
    - docker run --rm --privileged registry.gitlab.com/dedyms/docker-binfmt-qemu:buster
  script:
    #- docker build --pull -t "$CI_REGISTRY_IMAGE:$DATE" -t "$CI_DOCKERHUB_REGISTRY_IMAGE:$DATE" .
    #- docker push "$CI_REGISTRY_IMAGE:$DATE"
    #- docker push "$CI_DOCKERHUB_REGISTRY_IMAGE:$DATE"
    - docker buildx create --use
    - docker buildx inspect --bootstrap
    - docker buildx build --build-arg RELEASE=$RELEASE --push --platform linux/arm64,linux/amd64 -t "$CI_REGISTRY_IMAGE:$RELEASE" -t "$CI_DOCKERHUB_REGISTRY_IMAGE:$RELEASE" -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" -t "$CI_DOCKERHUB_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" .
    - docker buildx build --build-arg RELEASE=$RELEASE --push --platform linux/arm64,linux/amd64 -t "$CI_REGISTRY_IMAGE:$RELEASE-ffmpeg" -t "$CI_DOCKERHUB_REGISTRY_IMAGE:$RELEASE-ffmpeg" -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA-ffmpeg" -t "$CI_DOCKERHUB_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA-ffmpeg" . -f Dockerfile.ffmpeg
  only:
    variables:
      - $RELEASE != ""
    refs:
      - master
      - schedules
    changes:
      - Dockerfile

docker-build-git:
# git docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script: 
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$CI_DOCKERHUB_REGISTRY_USER" -p "$CI_DOCKERHUB_REGISTRY_PASSWORD" $CI_DOCKERHUB_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:git" -t "$CI_DOCKERHUB_REGISTRY_IMAGE:git" . -f Dockerfile.git
    - docker push "$CI_REGISTRY_IMAGE:git"
    - docker push "$CI_DOCKERHUB_REGISTRY_IMAGE:git"
  only:
    variables:
      - $SCHEDULE_TYPE == "daily"
    refs:
      - master
      - schedules
    changes:
      - Dockerfile.git

docker-build-fpm-nginx:
# git docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script: 
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$CI_DOCKERHUB_REGISTRY_USER" -p "$CI_DOCKERHUB_REGISTRY_PASSWORD" $CI_DOCKERHUB_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:git-fpm-nginx" -t "$CI_DOCKERHUB_REGISTRY_IMAGE:git-fpm-nginx" . -f Dockerfile.fpm-nginx
    - docker push "$CI_REGISTRY_IMAGE:git-fpm-nginx"
    - docker push "$CI_DOCKERHUB_REGISTRY_IMAGE:git-fpm-nginx"
  only:
    variables:
      - ($SCHEDULE_TYPE == "daily" || $SCHEDULE_TYPE == "fpm")
    refs:
      - master
      - schedules
    changes:
      - Dockerfile.fpm-nginx

docker-build-fpm-apache:
# git docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script: 
    - export TAG="git-fpm-apache"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$CI_DOCKERHUB_REGISTRY_USER" -p "$CI_DOCKERHUB_REGISTRY_PASSWORD" $CI_DOCKERHUB_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$TAG" -t "$CI_DOCKERHUB_REGISTRY_IMAGE:$TAG" . -f Dockerfile.fpm-apache
    - docker push "$CI_REGISTRY_IMAGE:$TAG"
    - docker push "$CI_DOCKERHUB_REGISTRY_IMAGE:$TAG"
  only:
    variables:
      - ($SCHEDULE_TYPE == "daily" || $SCHEDULE_TYPE == "fpm")
    refs:
      - master
      - schedules
    changes:
      - Dockerfile.fpm-apache


docker-build-php8:
# git docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$CI_DOCKERHUB_REGISTRY_USER" -p "$CI_DOCKERHUB_REGISTRY_PASSWORD" $CI_DOCKERHUB_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$BRANCH" -t "$CI_DOCKERHUB_REGISTRY_IMAGE:$BRANCH" . -f Dockerfile.php8
    - docker push "$CI_REGISTRY_IMAGE:$BRANCH"
    - docker push "$CI_DOCKERHUB_REGISTRY_IMAGE:$BRANCH"
  only:
    variables:
      - $SCHEDULE_TYPE == "daily" 
    refs:
      - master
      - schedules
    changes:
      - Dockerfile.php8
      - composer.json.php8
